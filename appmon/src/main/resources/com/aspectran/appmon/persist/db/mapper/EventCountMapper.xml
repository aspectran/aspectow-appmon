<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.aspectran.appmon.persist.db.mapper.EventCountMapper">

    <cache />

    <select id="getLastEventCount" resultType="com.aspectran.appmon.persist.counter.EventCountVO">
        <choose>
            <when test="_databaseId == 'mysql'">
                select domain, instance, event, datetime, total, delta, error
                from appmon_event_count_last
                where domain = #{domain} and instance = #{instance} and event = #{event}
                </when>
            <otherwise>
                select domain, instance, event, datetime, total, delta, error
                from appmon_event_count_last
                where domain = #{domain} and instance = #{instance} and event = #{event}
            </otherwise>
        </choose>
    </select>

    <update id="updateLastEventCount" parameterType="com.aspectran.appmon.persist.counter.EventCountVO">
        <choose>
            <when test="_databaseId == 'mysql'">
                insert into appmon_event_count_last (domain, instance, event, datetime, total, delta, error)
                values (#{domain}, #{instance}, #{event}, #{datetime}, #{total}, #{delta}, #{error})
                on duplicate key update datetime = #{datetime}, total = #{total}, delta = #{delta}, error = #{error}
            </when>
            <when test="_databaseId == 'oracle'">
                merge into appmon_event_count_last a
                using (
                    select
                        #{domain} domain, #{instance} instance, #{event} event,
                        #{datetime} datetime, #{total} total, #{delta} delta, #{error} error
                    from dual
                ) b
                on (a.domain = b.domain and a.instance = b.instance and a.event = b.event)
                when matched then
                    update set datetime = b.datetime, total = b.total, delta = b.delta, error = b.error
                when not matched then
                    insert (domain, instance, event, datetime, total, delta, error)
                    values (b.domain, b.instance, b.event, b.datetime, b.total, b.delta, b.error)
            </when>
            <otherwise>
                merge into appmon_event_count_last as a
                using values (#{domain}, #{instance}, #{event}, #{datetime}, #{total}, #{delta}, #{error})
                    as b (domain, instance, event, datetime, total, delta, error)
                on (a.domain = b.domain and a.instance = b.instance and a.event = b.event)
                when matched then
                    update set datetime = b.datetime, total = b.total, delta = b.delta, error = b.error
                when not matched then
                    insert (domain, instance, event, datetime, total, delta, error)
                    values (b.domain, b.instance, b.event, b.datetime, b.total, b.delta, b.error)
            </otherwise>
        </choose>
    </update>

    <insert id="insertEventCount" parameterType="com.aspectran.appmon.persist.counter.EventCountVO">
        <choose>
            <when test="_databaseId == 'mysql'">
                insert into appmon_event_count (domain, instance, event, datetime, total, delta, error)
                values (#{domain}, #{instance}, #{event}, #{datetime}, #{total}, #{delta}, #{error})
                on duplicate key update total = #{total}, delta = #{delta}, error = #{error}
            </when>
            <when test="_databaseId == 'oracle'">
                merge into appmon_event_count a
                using (
                    select
                        #{domain} domain, #{instance} instance, #{event} event,
                        #{datetime} datetime, #{total} total, #{delta} delta, #{error} error
                    from dual
                ) b
                on (a.domain = b.domain and a.instance = b.instance and a.event = b.event and a.datetime = b.datetime)
                when matched then
                    update set total = b.total, delta = b.delta, error = b.error
                when not matched then
                    insert (domain, instance, event, datetime, total, delta, error)
                    values (b.domain, b.instance, b.event, b.datetime, b.total, b.delta, b.error)
            </when>
            <otherwise>
                merge into appmon_event_count as a
                using values (#{domain}, #{instance}, #{event}, #{datetime}, #{total}, #{delta}, #{error})
                    as b (domain, instance, event, datetime, total, delta, error)
                on (a.domain = b.domain and a.instance = b.instance and a.event = b.event and a.datetime = b.datetime)
                when matched then
                    update set total = b.total, delta = b.delta, error = b.error
                when not matched then
                    insert (domain, instance, event, datetime, total, delta, error)
                    values (b.domain, b.instance, b.event, b.datetime, b.total, b.delta, b.error)
            </otherwise>
        </choose>
    </insert>

    <select id="getChartData" resultType="com.aspectran.appmon.persist.counter.EventCountVO">
        <choose>
            <when test="_databaseId == 'oracle'">
                select datetime, delta, error
                from (
                    select datetime, delta, error
                    from appmon_event_count
                    where domain = #{domain} and instance = #{instance} and event = #{event}
                    order by datetime desc
                )
                where rownum &lt;= 72
                order by datetime
            </when>
            <otherwise>
                select datetime, delta, error
                from (
                    select datetime, delta, error
                    from appmon_event_count
                    where domain = #{domain} and instance = #{instance} and event = #{event}
                    order by datetime desc
                    limit 72
                ) as x
                order by datetime
            </otherwise>
        </choose>
    </select>

    <select id="getChartDataByHour" resultType="com.aspectran.appmon.persist.counter.EventCountVO">
        <choose>
            <when test="_databaseId == 'oracle'">
                select ymdhh||'00' datetime, delta, error
                from (
                    select substr(datetime, 1, 10) ymdhh, sum(delta) delta, sum(error) error
                    from appmon_event_count
                    where domain = #{domain} and instance = #{instance} and event = #{event}
                    group by substr(datetime, 1, 10)
                    order by 1 desc
                )
                where rownum &lt;= 72
                order by ymdhh
            </when>
            <otherwise>
                select concat(ymdhh, '00') as datetime, delta, error
                from (
                    select substr(datetime, 1, 10) as ymdhh, sum(delta) as delta, sum(error) as error
                    from appmon_event_count
                    where domain = #{domain} and instance = #{instance} and event = #{event}
                    group by substr(datetime, 1, 10)
                    order by 1 desc
                    limit 72
                ) as x
                order by ymdhh
            </otherwise>
        </choose>
    </select>

    <select id="getChartDataByDay" resultType="com.aspectran.appmon.persist.counter.EventCountVO">
        <choose>
            <when test="_databaseId == 'oracle'">
                select ymd||'0000' datetime, delta, error
                from (
                    select substr(datetime, 1, 8) ymd, sum(delta) delta, sum(error) error
                    from appmon_event_count
                    where domain = #{domain} and instance = #{instance} and event = #{event}
                    group by substr(datetime, 1, 8)
                    order by 1 desc
                )
                where rownum &lt;= 72
                order by ymd
            </when>
            <otherwise>
                select concat(ymd, '0000') as datetime, delta, error
                from (
                    select substr(datetime, 1, 8) as ymd, sum(delta) as delta, sum(error) as error
                    from appmon_event_count
                    where domain = #{domain} and instance = #{instance} and event = #{event}
                    group by substr(datetime, 1, 8)
                    order by 1 desc
                    limit 72
                ) as x
                order by ymd
            </otherwise>
        </choose>
    </select>

    <select id="getChartDataByMonth" resultType="com.aspectran.appmon.persist.counter.EventCountVO">
        <choose>
            <when test="_databaseId == 'oracle'">
                select ym||'010000' datetime, delta, error
                from (
                    select substr(datetime, 1, 6) ym, sum(delta) delta, sum(error) error
                    from appmon_event_count
                    where domain = #{domain} and instance = #{instance} and event = #{event}
                    group by substr(datetime, 1, 6)
                    order by 1 desc
                )
                where rownum &lt;= 72
                order by ym
            </when>
            <otherwise>
                select concat(ym, '010000') as datetime, delta, error
                from (
                    select substr(datetime, 1, 6) as ym, sum(delta) as delta, sum(error) as error
                    from appmon_event_count
                    where domain = #{domain} and instance = #{instance} and event = #{event}
                    group by substr(datetime, 1, 6)
                    order by 1 desc
                    limit 72
                ) as x
                order by ym
            </otherwise>
        </choose>
    </select>

    <select id="getChartDataByYear" resultType="com.aspectran.appmon.persist.counter.EventCountVO">
        <choose>
            <when test="_databaseId == 'oracle'">
                select yy||'01010000' datetime, delta, error
                from (
                    select substr(datetime, 1, 4) yy, sum(delta) delta, sum(error) error
                    from appmon_event_count
                    where domain = #{domain} and instance = #{instance} and event = #{event}
                    group by substr(datetime, 1, 4)
                    order by 1 desc
                )
                where rownum &lt;= 72
                order by yy
            </when>
            <otherwise>
                select concat(yy, '01010000') as datetime, delta, error
                from (
                    select substr(datetime, 1, 4) as yy, sum(delta) as delta, sum(error) as error
                    from appmon_event_count
                    where domain = #{domain} and instance = #{instance} and event = #{event}
                    group by substr(datetime, 1, 4)
                    order by 1 desc
                    limit 72
                ) as x
                order by yy
            </otherwise>
        </choose>
    </select>

</mapper>
